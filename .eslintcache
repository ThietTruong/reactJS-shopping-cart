[{"C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\Components\\Products.js":"3","C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\utill.js":"4","C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\Components\\Filter.js":"5","C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\Components\\Cart.js":"6"},{"size":219,"mtime":1611658547237,"results":"7","hashOfConfig":"8"},{"size":2912,"mtime":1612024201583,"results":"9","hashOfConfig":"8"},{"size":3118,"mtime":1612036491638,"results":"10","hashOfConfig":"8"},{"size":108,"mtime":1611806206749,"results":"11","hashOfConfig":"8"},{"size":1069,"mtime":1611822519863,"results":"12","hashOfConfig":"8"},{"size":4232,"mtime":1612025592466,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2sxi3w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\index.js",[],["31","32"],"C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\App.js",["33"],"import React, { useEffect, useState } from \"react\";\nimport Filter from \"./Components/Filter\";\nimport Products from \"./Components/Products\";\nimport Cart from \"./Components/Cart\";\nimport data from \"./data.json\";\n\nfunction App() {\n  const [productList, setProductList] = useState(data.products);\n  const [size, setSize] = useState();\n  const [sort, setSort] = useState();\n  const [cart, setCart] = useState(\n    localStorage.getItem(\"cartItems\")\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\n      : []\n  );\n\n  const filterProduct = (event) => {\n    if (event.target.value === \"\") {\n      setProductList(data.products);\n    } else {\n      console.log(\"hihi\", event.target.value);\n      setSize(event.target.value);\n      setProductList(\n        data.products.filter(\n          (product) => product.availableSizes.indexOf(event.target.value) >= 0\n        )\n      );\n    }\n  };\n  const sortProduct = (event) => {\n    const valueSort = event.target.value;\n    setSort(valueSort);\n    setProductList(\n      productList\n        .slice()\n        .sort((a, b) =>\n          valueSort === \"lowest\"\n            ? a.price < b.price\n              ? 1\n              : -1\n            : valueSort === \"highest\"\n            ? a.price > b.price\n              ? 1\n              : -1\n            : a._id > b._id\n            ? 1\n            : -1\n        )\n    );\n  };\n  const addToCart = (product) => {\n    let alreadyInCart = false;\n    const cartItems = cart.slice();\n    cartItems.forEach((item) => {\n      if (item._id === product._id) {\n        item.count++;\n        alreadyInCart = true;\n      }\n    });\n    if (!alreadyInCart) {\n      cartItems.push({ ...product, count: 1 });\n    }\n    setCart(cartItems);\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  };\n  const removeFromCart = (product) => {\n    let newCart = cart.slice();\n    newCart = cart.filter((itemCart) => product._id !== itemCart._id);\n    setCart(newCart);\n    localStorage.setItem(\"cartItems\", JSON.stringify(newCart));\n  };\n  const createOrder = (order) => {\n    alert(`Need to save order for ${order.name}`);\n  };\n\n  return (\n    <div className=\"grid-container\">\n      <header>\n        <a href=\"/\"> React Shopping Cart</a>\n      </header>\n      <main>\n        <div className=\"content\">\n          <div className=\"main\">\n            <Filter\n              products={productList}\n              size={size}\n              sort={sort}\n              filterProduct={filterProduct}\n              sortProduct={sortProduct}\n            />\n            <Products products={productList} addToCart={addToCart} />\n          </div>\n          <div className=\"sidebar\">\n            <Cart\n              cartItems={cart}\n              removeFromCart={removeFromCart}\n              createOrder={createOrder}\n            />\n          </div>\n        </div>\n      </main>\n      <footer>All right is reserved.</footer>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\Components\\Products.js",["34","35","36"],"import React, { useState } from \"react\";\r\nimport formatCurrency from \"../utill\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport Modal from \"react-modal\";\r\nfunction Products({ products, addToCart }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalProduct, setModalProduct] = useState({\r\n    product: null,\r\n  });\r\n  const openModalProduct = (product) => {\r\n    setModalProduct({\r\n      product: product,\r\n    });\r\n  };\r\n  const closeModalProduct = () => {\r\n    setModalProduct({\r\n      product: null,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Fade bottom cascade>\r\n        <ul className=\"products\">\r\n          {products.map((product) => {\r\n            return (\r\n              <li key={product._id}>\r\n                <div className=\"product\">\r\n                  <a\r\n                    href={`#${product._id}`}\r\n                    onClick={() => openModalProduct(product)}\r\n                  >\r\n                    <img src={product.image} alt={product.image}></img>\r\n                    <p> {product.title}</p>\r\n                  </a>\r\n                  <div className=\"product-price\">\r\n                    <div>{formatCurrency(product.price)}</div>\r\n                    <button\r\n                      className=\"button primary\"\r\n                      onClick={() => addToCart(product)}\r\n                    >\r\n                      {\" \"}\r\n                      Add to Cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Fade>\r\n      {modalProduct.product && (\r\n        <Modal isOpen={true} onRequestClose={closeModalProduct}>\r\n          <Zoom>\r\n            <button className=\"close-modal\" onClick={closeModalProduct}>\r\n              x\r\n            </button>\r\n            <div className=\"product-details\">\r\n              <img\r\n                src={modalProduct.product.image}\r\n                alt={modalProduct.product.title}\r\n              ></img>\r\n              <div className=\"product-details-description\">\r\n                <p>\r\n                  <strong>{modalProduct.product.title}</strong>\r\n                </p>\r\n                <p>{modalProduct.product.description}</p>\r\n                <p>\r\n                  Avaiable Size\r\n                  {modalProduct.product.availableSizes.map((item) => (\r\n                    <span>\r\n                      <button className=\"button\">{item}</button>\r\n                    </span>\r\n                  ))}\r\n                </p>\r\n                <div className=\"product-price\">\r\n                  <div>{modalProduct.product.price}</div>\r\n                  <button\r\n                    className=\"button primary\"\r\n                    onClick={() => (\r\n                      addToCart(modalProduct.product), () => closeModalProduct\r\n                    )}\r\n                  >\r\n                    Add to cart\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Zoom>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\utill.js",[],["37","38"],"C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\Components\\Filter.js",[],"C:\\Users\\PC\\Desktop\\FullShoppingCart\\react-shopping-cart\\src\\Components\\Cart.js",["39","40"],"import React, { useState } from \"react\";\r\nimport formatCurrency from \"../utill\";\r\nimport Fade from \"react-reveal/Fade\";\r\nfunction Cart({ cartItems, removeFromCart, createOrder }) {\r\n  const [showCheckout, setShowCheckout] = useState(false);\r\n  const [inforCheckout, setInforCheckout] = useState();\r\n  const [inforOrder, setInforOrder] = useState();\r\n  const handleInput = (event) => {\r\n    event.preventDefault();\r\n    setInforCheckout({\r\n      ...inforCheckout,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleOrder = (event) => {\r\n    event.preventDefault();\r\n    const order = {\r\n      ...inforCheckout,\r\n      cartItems: cartItems,\r\n    };\r\n    createOrder(order);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {cartItems.length === 0 ? (\r\n          <div className=\"cart cart-header\">Cart is empty</div>\r\n        ) : (\r\n          <div className=\"cart cart-header\">\r\n            You have {cartItems.length} in the cart\r\n          </div>\r\n        )}\r\n        <div>\r\n          <div className=\"cart\">\r\n            <Fade left cascade>\r\n              <ul className=\"cart-items\">\r\n                {cartItems.map((item) => (\r\n                  <li key={item._id}>\r\n                    <div>\r\n                      <img alt={item.image} src={item.image}></img>\r\n                    </div>\r\n                    <div>\r\n                      <div>{item.title}</div>\r\n                      <div className=\"right\">\r\n                        ${item.price} x {item.count}\r\n                        <button\r\n                          className=\"button\"\r\n                          onClick={() => removeFromCart(item)}\r\n                        >\r\n                          Remove from cart\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Fade>\r\n          </div>\r\n          {cartItems.length === 0 ? (\r\n            \"\"\r\n          ) : (\r\n            <div className=\"cart\">\r\n              <div className=\"total\">\r\n                <div>\r\n                  {\"Total: \"}\r\n                  {formatCurrency(\r\n                    cartItems.reduce(\r\n                      (acc, cur) => acc + cur.price * cur.count,\r\n                      0\r\n                    )\r\n                  )}\r\n                </div>\r\n\r\n                <button\r\n                  className=\"button primary\"\r\n                  onClick={() => {\r\n                    setShowCheckout(true);\r\n                  }}\r\n                >\r\n                  Proceed\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {showCheckout && cartItems.length !== 0 ? (\r\n            <div className=\"cart\">\r\n              <Fade right cascade>\r\n                <form onSubmit={handleOrder}>\r\n                  <ul className=\"form-container\">\r\n                    <li>\r\n                      <label>Email</label>\r\n                      <input\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        required\r\n                        onChange={handleInput}\r\n                      ></input>\r\n                    </li>\r\n                    <li>\r\n                      <label>Name</label>\r\n                      <input\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        required\r\n                        onChange={handleInput}\r\n                      ></input>\r\n                    </li>\r\n                    <li>\r\n                      <label>Adress</label>\r\n                      <input\r\n                        name=\"address\"\r\n                        type=\"text\"\r\n                        required\r\n                        onChange={handleInput}\r\n                      ></input>\r\n                    </li>\r\n                    <li>\r\n                      <button className=\"button primary\" type=\"submit\">\r\n                        Create order\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                </form>\r\n              </Fade>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"49","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":19},{"ruleId":"45","severity":1,"message":"50","line":7,"column":21,"nodeType":"47","messageId":"48","endLine":7,"endColumn":33},{"ruleId":"51","severity":1,"message":"52","line":81,"column":54,"nodeType":"53","messageId":"54","endLine":81,"endColumn":55},{"ruleId":"41","replacedBy":"55"},{"ruleId":"43","replacedBy":"56"},{"ruleId":"45","severity":1,"message":"57","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":20},{"ruleId":"45","severity":1,"message":"58","line":7,"column":22,"nodeType":"47","messageId":"48","endLine":7,"endColumn":35},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["59"],["60"],"'inforOrder' is assigned a value but never used.","'setInforOrder' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]